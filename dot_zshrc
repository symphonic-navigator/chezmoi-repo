# ~/.zshrc

# 1. Environment Variables
# -------------------------------------------------------------
export ZSH="$HOME/.oh-my-zsh"
export PATH="$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH:$HOME/.dotnet/tools"
export EDITOR="nvim"
export LANG="en_US.UTF-8"
export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent.socket"


# 2. General Configuration
# -------------------------------------------------------------
KEYTIMEOUT=1

# 3. History Configuration
# -------------------------------------------------------------
HISTFILE="$HOME/.zsh_history"
HISTSIZE=10000
SAVEHIST=10000
HIST_STAMPS="yyyy-mm-dd"

setopt \
  APPEND_HISTORY \
  SHARE_HISTORY \
  INC_APPEND_HISTORY \
  HIST_IGNORE_DUPS \
  HIST_REDUCE_BLANKS \
  HIST_EXPIRE_DUPS_FIRST \
  HIST_VERIFY

# 4. Oh‑My‑Zsh Core
# -------------------------------------------------------------
ZSH_THEME="robbyrussell"

plugins=(
    chezmoi
    direnv
    git
    zsh-syntax-highlighting
    zsh-autosuggestions
    zsh-history-substring-search
    vscode
    redis-cli
    sudo
    colored-man-pages
    command-not-found
    archlinux
    docker
    docker-compose
    gh
    kubectl
)

source "$ZSH/oh-my-zsh.sh"

# 5. Prompt (Starship)
# -------------------------------------------------------------
if command -v starship >/dev/null 2>&1; then
    eval "$(starship init zsh)"
else
    echo "❌ starship not found. Please install starship to use the prompt."
fi

# 6. Aliases
# -------------------------------------------------------------
alias ls='exa'
alias cat='bat'
alias vim='nvim'
alias v='nvim'
alias reset='clear && source ~/.zshrc && hyprctl reload'
alias yay='yay --answerclean All --answerdiff N --answeredit N --answerupgrade Y --removemake'
alias ghc='gh copilot'
alias ghce='gh copilot explain'
alias ghcs='gh copilot suggest'
alias wlc='wl-copy'
alias wlp='wl-paste'
alias cea='f() { chezmoi edit "$@" && chezmoi apply && hyprctl reload }; f'
alias cear='f() { chezmoi edit "$@" && chezmoi apply && reset }; f'
alias cdc='cd ~/.local/share/chezmoi'

# 7. zoxide Integration
# -------------------------------------------------------------
if command -v zoxide >/dev/null 2>&1; then

    # auto-add cwd on directory change
    function _zoxide_add_cwd() {
        zoxide add "$(pwd -L)"
    }
    chpwd_functions+=(_zoxide_add_cwd)
    
    # smart `z` jump
    function z() {
        if (( $# == 0 )); then
            cd "$(zoxide query -i)"
            elif [[ $1 == '-' ]]; then
            cd "$OLDPWD" || return
        else
            cd "$(zoxide query -- "$@")"
        fi
    }
    
    function zi() { cd "$(zoxide query -i -- "$@")"; }
    
    alias za='zoxide add'
    alias zq='zoxide query'
    alias zqi='zoxide query -i'
    alias zr='zoxide remove'
    
    function zri() {
        zoxide remove "$(zoxide query -i -- "$@")"
    }
else
    echo "❌ zoxide not found. Please install zoxide to use the zoxide integration."
fi

# 8. fzf Enhancements
# -------------------------------------------------------------
if command -v fzf >/dev/null 2>&1; then
    
    # directory picker
    function fzf_z_jump() {
        local dir
        dir=$(zoxide query -l | fzf --height=40% --reverse --prompt="zoxide> ") || {
            zle reset-prompt
            return
        }
        
        BUFFER="cd ${(q)dir}"
        zle accept-line
    }
    zle -N fzf_z_jump
    bindkey '^F' fzf_z_jump
    zle -R
    
    # history search
    fzf-history-widget() {
        BUFFER=$(fc -lnr 1 | sed -E 's/^[[:space:]]*[0-9]+[[:space:]]+//' | fzf --height 40% --layout=reverse --no-sort --prompt="history> ")
        CURSOR=${#BUFFER}
        zle reset-prompt
    }
    zle -N fzf-history-widget
    bindkey '^R' fzf-history-widget
    
    # fzf in yay
    function yay_fzf() {
        local pkg
        pkg=$(yay -Ss "$1" | \
            fzf --preview 'yay -Si {1}' | \
        awk '{print $1}')
        [[ -n $pkg ]] && yay -S "$pkg"
    }
else
    echo "❌ fzf not found. Please install fzf to use the fzf enhancements."
fi

# 9. Local Overrides
# -------------------------------------------------------------
[ -f ~/.local-env.sh ] && source ~/.local-env.sh

